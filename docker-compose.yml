services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    networks:
      - lumos-network
    restart: always

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do sleep 1d; done'"
    networks:
      - lumos-network


  springboot-app:
    build:
      context: ./springboot-app
    container_name: springboot-app
    ports:
      - "8080:8080"
    # volumes:
      # - ./springboot-app:/app
      #- /app/target
      #- shared-data:/mnt/nfs  # Montando o volume compartilhado NFS
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    networks:
      - lumos-network
    restart: always

  go-server:
    build: ./golang-services
    container_name: go-server
    ports:
      - "8081:8081"
    volumes:
      - shared-data:/mnt/nfs  # Montando volume compartilhado para dados
    environment:
      - ENVIRONMENT=production
    networks:
      - lumos-network
    restart: always

  import-data:
    build:
      context: ./golang-services
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - ENVIRONMENT=production
    networks:
      - lumos-network
    restart: always

  nfs-server:
    image: itsthenetwork/nfs-server-alpine
    container_name: nfs-server
    volumes:
      - shared-data:/srv/nfs/exports  # Usando o volume compartilhado
    environment:
      - SHARED_DIRECTORY=/srv/nfs/exports
    networks:
      - lumos-network
    restart: always

networks:
  lumos-network:
    driver: bridge

volumes:
  shared-data:
