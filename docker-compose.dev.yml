services:
  postgres:
    image: postgres
    container_name: postgres
    expose:
      - 5432
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: always

  springboot-app:
    build:
      context: ./springboot-app
    container_name: springboot-app
    ports:
      - "8080:8080"
    environment:
      - SPRING_PROFILES_ACTIVE=production
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - DB_HOST=172.17.0.1
      - DB_PORT=5432
      - DB_USER=${DB_USER}
      - DB_NAME=${DB_NAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - MINIO_URL=http://minio:9000
      - MINIO_PASSWORD=${MINIO_PASSWORD}
      - JAVA_TOOL_OPTIONS=-XX:+UseG1GC -XX:MaxRAMPercentage=60.0 -XX:+ExitOnOutOfMemoryError -XX:+AlwaysPreTouch --enable-preview
    mem_limit: 512m
    restart: always
    depends_on:
      - minio
  puppeteer-service:
    build:
      context: ./puppeteer-service
    container_name: puppeteer-service
    expose:
      - "3000"
    environment:
      - NODE_ENV=production
    mem_limit: 250m
    restart: always
    depends_on:
      - minio

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000" # API MinIO
      - "9090:9090" # Console MinIO
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: ${MINIO_PASSWORD}
    command: server --console-address ":9090" /data
    volumes:
      - ./minio-data:/data
    mem_limit: 512m

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: "172.18.0.0/16" # Faixa de IP fixa

volumes:
  shared-data:
  postgres-data:
